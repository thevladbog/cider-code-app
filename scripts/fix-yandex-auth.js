#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å Yandex Cloud –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
 * –ó–∞–ø—É—Å–∫: npm run fix-yandex-auth –∏–ª–∏ node scripts/fix-yandex-auth.js
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Yandex Cloud –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...\n');

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TypeScript –º–æ–¥—É–ª—å —á–µ—Ä–µ–∑ ts-node
    const { diagnosAndFixYandexCloudAuth } =
      require('ts-node').register({
        transpileOnly: true,
        compilerOptions: {
          module: 'commonjs',
        },
      }) && require('../src/services/authFixer.ts');

    await diagnosAndFixYandexCloudAuth();
    console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–µ–∑ TypeScript
    console.log('\nüîç –ë–∞–∑–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log(
      '- YANDEX_CLOUD_LOGGING_ENABLED:',
      process.env.YANDEX_CLOUD_LOGGING_ENABLED || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    );
    console.log(
      '- YANDEX_IAM_TOKEN:',
      process.env.YANDEX_IAM_TOKEN ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    );
    console.log(
      '- YANDEX_SERVICE_ACCOUNT_KEY:',
      process.env.YANDEX_SERVICE_ACCOUNT_KEY ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    );
    console.log('- YANDEX_FOLDER_ID:', process.env.YANDEX_FOLDER_ID || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    console.log('- YANDEX_LOG_GROUP_ID:', process.env.YANDEX_LOG_GROUP_ID || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');

    console.log('\nüí° –†–ï–®–ï–ù–ò–ï:');
    if (process.env.YANDEX_IAM_TOKEN && !process.env.YANDEX_SERVICE_ACCOUNT_KEY) {
      console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω IAM —Ç–æ–∫–µ–Ω - –æ–Ω –º–æ–≥ –∏—Å—Ç–µ—á—å!');
      console.log('üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ Service Account Key:');
      console.log('1. –°–æ–∑–¥–∞–π—Ç–µ Service Account Key –≤ –∫–æ–Ω—Å–æ–ª–∏ Yandex Cloud');
      console.log(
        '2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YANDEX_SERVICE_ACCOUNT_KEY={"id":"...","service_account_id":"...","private_key":"..."}'
      );
      console.log('3. –£–±–µ—Ä–∏—Ç–µ YANDEX_IAM_TOKEN');
    } else if (!process.env.YANDEX_IAM_TOKEN && !process.env.YANDEX_SERVICE_ACCOUNT_KEY) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ç–æ–∫–µ–Ω—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      console.log('üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    } else if (process.env.YANDEX_SERVICE_ACCOUNT_KEY) {
      console.log('‚úÖ Service Account Key –Ω–∞–π–¥–µ–Ω - –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('üîß –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞');
    }

    console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: src/docs/YANDEX_TOKEN_EXPIRATION_FIX.md');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}

module.exports = { main };
