name: Validate Commit Messages

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  validate-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install commitlint
        run: |
          npm install -g @commitlint/config-conventional @commitlint/cli

      - name: Check commitlint config
        run: |
          if [ -f "commitlint.config.js" ]; then
            echo "✅ Found commitlint.config.js"
            cat commitlint.config.js
          else
            echo "❌ No commitlint.config.js found, using default config"
          fi

      - name: Validate PR commits
        if: github.event_name == 'pull_request'
        run: |
          echo "Validating commits in PR #${{ github.event.pull_request.number }}"
          echo "Base: ${{ github.event.pull_request.base.sha }}"
          echo "Head: ${{ github.event.pull_request.head.sha }}"

          # Проверяем коммиты в PR
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Comment PR if validation fails
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Проверяем, не создали ли мы уже комментарий
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Commit message validation failed')
            );

            const commentBody = `❌ **Commit message validation failed!**

            Please ensure your commit messages follow the [Conventional Commits](https://www.conventionalcommits.org/) format.

            **Format:** \`type(scope): description\`

            **Examples:**
            - \`feat: add new scanning feature\`
            - \`fix: resolve printer connection issue\`
            - \`docs: update installation guide\`

            **Types:** feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert

            ---
            *This comment was generated automatically by the commit validation workflow.*`;

            if (botComment) {
              // Обновляем существующий комментарий
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Создаем новый комментарий
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: Remove validation comment if success
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Находим и удаляем комментарий о неудачной валидации, если он есть
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Commit message validation failed')
            );

            if (botComment) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id
              });
              console.log('Removed outdated validation failure comment');
            }
