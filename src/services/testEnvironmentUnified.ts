/**
 * –¢–µ—Å—Ç —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É VITE_APP_ENV –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
try {
  require('dotenv').config();
} catch {
  console.log('dotenv not available, using system environment variables');
}

import { getAppEnvironment, getEnvironmentConfig, logEnvironmentInfo } from '../utils/environment';
import { createSDKLoggerConfig } from './loggerConfig';
import { YandexCloudLoggerSDK } from './yandexCloudLoggerSDK';

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const loggerConfig = createSDKLoggerConfig();
const logger = new YandexCloudLoggerSDK(loggerConfig);

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('=== ENVIRONMENT UNIFIED TEST ===');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
const environment = getAppEnvironment();
console.log('üåç Current environment:', environment);

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
const envConfig = getEnvironmentConfig();
console.log('‚öôÔ∏è Environment config:', {
  environment: envConfig.environment,
  apiUrl: envConfig.apiUrl,
  enableCloudLogging: envConfig.enableCloudLogging,
  enableDetailedLogging: envConfig.enableDetailedLogging,
  enableDebugMode: envConfig.enableDebugMode,
});

// 3. –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏
logEnvironmentInfo();

// 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä —Å environment
logger.info('Environment unified test started', {
  testType: 'environment-unified',
  currentEnvironment: environment,
  apiUrl: envConfig.apiUrl,
  timestamp: new Date().toISOString(),
});

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é
console.log('üîç Environment variables check:');
console.log('- process.env.NODE_ENV:', process.env.NODE_ENV);
console.log('- process.env.VITE_APP_ENV:', process.env.VITE_APP_ENV);
console.log('- process.env.APP_ENVIRONMENT:', process.env.APP_ENVIRONMENT);

// –í Vite environment
try {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const importMeta = (globalThis as any).import?.meta;
  if (importMeta && importMeta.env) {
    console.log('- import.meta.env.VITE_APP_ENV:', importMeta.env.VITE_APP_ENV);
    console.log('- import.meta.env.DEV:', importMeta.env.DEV);
    console.log('- import.meta.env.PROD:', importMeta.env.PROD);
  }
} catch {
  console.log('- import.meta.env not available in current context');
}

// 6. –¢–µ—Å—Ç –ª–æ–≥–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏
const testData = {
  environment,
  testTimestamp: new Date().toISOString(),
  configuredApiUrl: envConfig.apiUrl,
};

logger.debug('Debug log with environment', testData);
logger.info('Info log with environment', testData);
logger.warn('Warning log with environment', testData);
logger.error('Error log with environment', { ...testData, errorType: 'test-error' });

console.log('‚úÖ Environment unified test completed');
console.log('Check Yandex Cloud logs for environment field in jsonPayload');
