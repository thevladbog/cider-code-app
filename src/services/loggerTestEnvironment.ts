import dotenv from 'dotenv';
import { createSDKLoggerConfig } from './loggerConfig';
import { YandexCloudLoggerSDK } from './yandexCloudLoggerSDK';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

/**
 * –¢–µ—Å—Ç –ª–æ–≥–≥–µ—Ä–∞ —Å environment –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
 */
async function testLoggerWithEnvironment() {
  console.log('='.repeat(80));
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï YANDEX CLOUD LOGGER –° ENVIRONMENT');
  console.log('='.repeat(80));

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = createSDKLoggerConfig();

    console.log('\nüìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:');
    console.log('Enabled:', config.enabled);
    console.log('Environment:', config.environment);
    console.log('Folder ID:', config.folderId);
    console.log('Log Group ID:', config.logGroupId);
    console.log('Resource ID:', config.resource?.id);

    if (!config.enabled) {
      console.log('\n‚ö†Ô∏è –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –≤–∫–ª—é—á–∏—Ç–µ YANDEX_CLOUD_LOGGING_ENABLED=true');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
    const logger = new YandexCloudLoggerSDK(config);
    await logger.initialize();

    console.log('\nüìù –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–´–• –õ–û–ì–û–í...');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –ª–æ–≥–æ–≤
    await logger.info('Environment Test: Application started', {
      feature: 'environment_support',
      testType: 'basic_logging',
      timestamp: new Date().toISOString(),
    });

    await logger.warn('Environment Test: This is a warning', {
      feature: 'environment_support',
      testType: 'warning_logging',
      warningLevel: 'medium',
    });

    await logger.error('Environment Test: This is an error', {
      feature: 'environment_support',
      testType: 'error_logging',
      errorType: 'test_error',
      severity: 'high',
    });

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º batch –æ—Ç–ø—Ä–∞–≤–∫—É
    console.log('\nüì¶ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BATCH –û–¢–ü–†–ê–í–ö–ò...');
    await logger.logBatch([
      {
        level: 'INFO',
        message: 'Environment Batch Test: Message 1',
        jsonPayload: { batchNumber: 1, testType: 'batch_test' },
      },
      {
        level: 'DEBUG',
        message: 'Environment Batch Test: Message 2',
        jsonPayload: { batchNumber: 2, testType: 'batch_test' },
      },
      {
        level: 'WARN',
        message: 'Environment Batch Test: Message 3',
        jsonPayload: { batchNumber: 3, testType: 'batch_test' },
      },
    ]);

    console.log('\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log(`üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Yandex Cloud Logging –¥–ª—è environment: ${config.environment}`);
    console.log('   https://console.yandex.cloud/folders/' + config.folderId + '/logging');
    console.log('\nüîç –í –ª–æ–≥–∞—Ö –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:');
    console.log('   - environment:', config.environment);
    console.log('   - platform:', process.platform);
    console.log('   - arch:', process.arch);
    console.log('   - appVersion: unknown (–∏–ª–∏ –≤–µ—Ä—Å–∏—è –∏–∑ package.json)');
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testLoggerWithEnvironment().catch(console.error);
