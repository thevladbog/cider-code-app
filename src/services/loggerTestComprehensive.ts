import dotenv from 'dotenv';
import { createSDKLoggerConfig, getLoggerConfig } from './loggerConfig';
import { YandexCloudLogger } from './yandexCloudLogger';
import { YandexCloudLoggerSDK } from './yandexCloudLoggerSDK';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

/**
 * –¢–µ—Å—Ç –¥–ª—è –æ–±–µ–∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π Yandex Cloud Logger
 */
async function testYandexCloudLogging() {
  console.log('='.repeat(80));
  console.log('üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í YANDEX CLOUD LOGGING');
  console.log('='.repeat(80));

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const restConfig = getLoggerConfig();
  const sdkConfig = createSDKLoggerConfig();

  console.log('\nüìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø REST API:');
  console.log('Enabled:', restConfig.enabled);
  console.log('Use SDK:', restConfig.useSDK);
  console.log('IAM Token:', restConfig.iamToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('OAuth Token:', restConfig.oauthToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log(
    'Service Account Key:',
    restConfig.serviceAccountKey ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
  );
  console.log('Folder ID:', restConfig.folderId);
  console.log('Log Group ID:', restConfig.logGroupId);

  console.log('\nüìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø SDK:');
  console.log('Enabled:', sdkConfig.enabled);
  console.log('Use SDK:', sdkConfig.useSDK);
  console.log('IAM Token:', sdkConfig.iamToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('OAuth Token:', sdkConfig.oauthToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log(
    'Service Account Key:',
    sdkConfig.serviceAccountKey ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
  );
  console.log('Folder ID:', sdkConfig.folderId);
  console.log('Log Group ID:', sdkConfig.logGroupId);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º Service Account Key –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ
  if (restConfig.serviceAccountKey) {
    console.log('\nüîê –î–ï–¢–ê–õ–ò SERVICE ACCOUNT KEY:');
    console.log('Key ID:', restConfig.serviceAccountKey.id);
    console.log('Service Account ID:', restConfig.serviceAccountKey.service_account_id);
    console.log('Algorithm:', restConfig.serviceAccountKey.key_algorithm);
    console.log('Public Key Length:', restConfig.serviceAccountKey.public_key?.length || 0);
    console.log('Private Key Length:', restConfig.serviceAccountKey.private_key?.length || 0);
  }

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º REST API –≤–µ—Ä—Å–∏—é
  console.log('\n' + '='.repeat(80));
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï REST API –í–ï–†–°–ò–ò');
  console.log('='.repeat(80));

  if (restConfig.enabled && !restConfig.useSDK) {
    try {
      const restLogger = new YandexCloudLogger(restConfig);

      console.log('\n‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è REST –ª–æ–≥–≥–µ—Ä–∞...');
      await restLogger.initialize();

      console.log('\nüìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ REST API...');
      await restLogger.info('REST API: –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ INFO', {
        testData: 'REST API test',
        timestamp: new Date().toISOString(),
      });

      await restLogger.warn('REST API: –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', {
        warning: 'test warning',
        source: 'REST API',
      });

      await restLogger.error('REST API: –¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞', {
        error: 'test error',
        severity: 'high',
      });

      // –¢–µ—Å—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      console.log('\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ REST API...');
      await restLogger.logBatch([
        { level: 'INFO', message: 'REST API Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 1', jsonPayload: { batch: 1 } },
        { level: 'DEBUG', message: 'REST API Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 2', jsonPayload: { batch: 2 } },
        { level: 'WARN', message: 'REST API Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 3', jsonPayload: { batch: 3 } },
      ]);

      console.log('‚úÖ REST API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ REST API:', error);
    }
  } else {
    console.log('‚ö†Ô∏è REST API –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
  }

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º SDK –≤–µ—Ä—Å–∏—é
  console.log('\n' + '='.repeat(80));
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SDK –í–ï–†–°–ò–ò');
  console.log('='.repeat(80));

  if (sdkConfig.enabled) {
    try {
      const sdkLogger = new YandexCloudLoggerSDK(sdkConfig);

      console.log('\n‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SDK –ª–æ–≥–≥–µ—Ä–∞...');
      await sdkLogger.initialize();

      console.log('\nüìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ SDK...');
      await sdkLogger.info('SDK: –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ INFO', {
        testData: 'SDK test',
        timestamp: new Date().toISOString(),
      });

      await sdkLogger.warn('SDK: –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', {
        warning: 'test warning',
        source: 'SDK',
      });

      await sdkLogger.error('SDK: –¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞', {
        error: 'test error',
        severity: 'high',
      });

      // –¢–µ—Å—Ç –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      console.log('\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ SDK...');
      await sdkLogger.logBatch([
        { level: 'INFO', message: 'SDK Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 1', jsonPayload: { batch: 1 } },
        { level: 'DEBUG', message: 'SDK Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 2', jsonPayload: { batch: 2 } },
        { level: 'WARN', message: 'SDK Batch: –°–æ–æ–±—â–µ–Ω–∏–µ 3', jsonPayload: { batch: 3 } },
      ]);

      console.log('‚úÖ SDK —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ SDK:', error);
    }
  } else {
    console.log('‚ö†Ô∏è SDK –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
  }

  console.log('\n' + '='.repeat(80));
  console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´');
  console.log('='.repeat(80));

  console.log('\nüìã –ò–¢–û–ì–ò:');
  console.log('- REST API –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:', restConfig.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ');
  console.log('- SDK –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:', sdkConfig.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ');

  if (!restConfig.enabled && !sdkConfig.enabled) {
    console.log('\n‚ö†Ô∏è –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YANDEX_CLOUD_LOGGING_ENABLED=true –≤ .env —Ñ–∞–π–ª–µ');
  }

  console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å Yandex Cloud Logging –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–æ–≥–æ–≤:');
  console.log('   https://console.yandex.cloud/folders/' + restConfig.folderId + '/logging');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testYandexCloudLogging().catch(console.error);
}

export { testYandexCloudLogging };
