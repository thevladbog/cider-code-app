import { iamTokenManager } from './iamTokenManager';
import { ServiceAccountKeyLoader } from './types';

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å Yandex Cloud –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
 */
export class YandexCloudAuthFixer {
  /**
   * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è
   */
  static async diagnoseAuthenticationIssue(): Promise<void> {
    console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å Yandex Cloud –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const iamToken = process.env.YANDEX_IAM_TOKEN;
    const oauthToken = process.env.YANDEX_OAUTH_TOKEN;
    const serviceAccountKey = process.env.YANDEX_SERVICE_ACCOUNT_KEY;
    const loggingEnabled = process.env.YANDEX_CLOUD_LOGGING_ENABLED;

    console.log('üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
    console.log(`- YANDEX_CLOUD_LOGGING_ENABLED: ${loggingEnabled || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
    console.log(`- YANDEX_IAM_TOKEN: ${iamToken ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
    console.log(`- YANDEX_OAUTH_TOKEN: ${oauthToken ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
    console.log(
      `- YANDEX_SERVICE_ACCOUNT_KEY: ${serviceAccountKey ? '‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`
    );

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã
    if (loggingEnabled === 'true') {
      if (iamToken && !serviceAccountKey) {
        console.log('\n‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è IAM —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏—Å—Ç–µ–∫–∞—Ç—å');
        console.log('üí° –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–û–ï –†–ï–®–ï–ù–ò–ï:');
        console.log('1. –ü–æ–ª—É—á–∏—Ç–µ Service Account Key –≤ –∫–æ–Ω—Å–æ–ª–∏ Yandex Cloud');
        console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é YANDEX_SERVICE_ACCOUNT_KEY —Å JSON —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∫–ª—é—á–∞');
        console.log('3. –£–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é YANDEX_IAM_TOKEN');
        console.log(
          '\nüìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: https://yandex.cloud/ru/docs/iam/operations/sa/create-access-key'
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–∞
        const tokenStatus = iamTokenManager.getTokenStatus();
        if (tokenStatus.isExpired) {
          console.log('\nüî¥ IAM —Ç–æ–∫–µ–Ω –ò–°–¢–ï–ö!');
          console.log(
            '‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è:',
            tokenStatus.expirationTime?.toISOString() || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
          );
        } else if (tokenStatus.shouldRefresh) {
          console.log('\nüü° IAM —Ç–æ–∫–µ–Ω —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç –∏ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
          console.log(
            '‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è:',
            tokenStatus.expirationTime?.toISOString() || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
          );
        }
      } else if (serviceAccountKey) {
        console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Service Account Key)');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–ª—é—á–∞
        try {
          const parsedKey = JSON.parse(serviceAccountKey);
          if (ServiceAccountKeyLoader.validate(parsedKey)) {
            console.log('‚úÖ Service Account Key –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é');
          } else {
            console.log('‚ùå Service Account Key –ù–ï –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é');
            console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å JSON –∏ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π');
          }
        } catch (error) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Service Account Key:', error);
        }
      } else {
        console.log('\n‚ùå –ù–ï –ù–ê–ô–î–ï–ù–´ —Ç–æ–∫–µ–Ω—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        console.log('üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
        console.log('- Service Account Key (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)');
        console.log('- IAM —Ç–æ–∫–µ–Ω');
        console.log('- OAuth —Ç–æ–∫–µ–Ω');
      }
    } else {
      console.log('\nüìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Yandex Cloud –æ—Ç–∫–ª—é—á–µ–Ω–æ');
      console.log('üí° –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YANDEX_CLOUD_LOGGING_ENABLED=true');
    }

    console.log('\nüìã –î—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
    console.log(`- YANDEX_FOLDER_ID: ${process.env.YANDEX_FOLDER_ID || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
    console.log(`- YANDEX_LOG_GROUP_ID: ${process.env.YANDEX_LOG_GROUP_ID || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
    console.log(`- NODE_ENV: ${process.env.NODE_ENV || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  }

  /**
   * –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å—Ç–µ–∫—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
   */
  static async quickFix(): Promise<boolean> {
    console.log('üîß –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã...\n');

    const iamToken = process.env.YANDEX_IAM_TOKEN;
    const serviceAccountKey = process.env.YANDEX_SERVICE_ACCOUNT_KEY;

    if (serviceAccountKey) {
      console.log('‚úÖ Service Account Key –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–±–ª–µ–º —Å –∏—Å—Ç–µ—á–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ');
      console.log('üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ Service Account');
      return true;
    }

    if (iamToken && serviceAccountKey) {
      console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è IAM —Ç–æ–∫–µ–Ω–∞...');
      const newToken = await iamTokenManager.forceRefresh();
      if (newToken) {
        console.log('‚úÖ IAM —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        return true;
      } else {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å IAM —Ç–æ–∫–µ–Ω');
      }
    }

    console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ Service Account Key –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ç–æ–∫–µ–Ω–∞–º–∏');
    return false;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .env —Ñ–∞–π–ª–∞
   */
  static generateEnvExample(): string {
    return `# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Yandex Cloud Logging (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toISOString()}

# –í–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
YANDEX_CLOUD_LOGGING_ENABLED=true

# –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô –°–ü–û–°–û–ë: Service Account Key (–Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç)
# –ü–æ–ª—É—á–∏—Ç—å: https://yandex.cloud/ru/docs/iam/operations/sa/create-access-key
YANDEX_SERVICE_ACCOUNT_KEY={"id":"your-key-id","service_account_id":"your-sa-id","private_key":"-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n"}

# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –°–ü–û–°–û–ë: IAM —Ç–æ–∫–µ–Ω (–∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤)
# –ü–æ–ª—É—á–∏—Ç—å: https://yandex.cloud/ru/docs/iam/operations/iam-token/create
# YANDEX_IAM_TOKEN=your-iam-token-here

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
YANDEX_FOLDER_ID=your-folder-id
YANDEX_LOG_GROUP_ID=your-log-group-id

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
APP_INSTANCE_ID=bottle-code-app-prod-1
NODE_ENV=production
YANDEX_USE_SDK=true

# –í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å Service Account –ø—Ä–∞–≤–∞:
# - logging.writer –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
# - logging.viewer –¥–ª—è —á—Ç–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
`;
  }

  /**
   * –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã
   */
  static showFixInstructions(): void {
    console.log(`
üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –û–®–ò–ë–ö–ò "The token has expired"

–ü–†–ò–ß–ò–ù–ê –ü–†–û–ë–õ–ï–ú–´:
IAM —Ç–æ–∫–µ–Ω—ã Yandex Cloud –¥–µ–π—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ 12 —á–∞—Å–æ–≤ –∏ —Ç—Ä–µ–±—É—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.

–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–û–ï –†–ï–®–ï–ù–ò–ï:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ Service Account Key (–Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç):
   - –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å Yandex Cloud
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ IAM ‚Üí –°–µ—Ä–≤–∏—Å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
   - –°–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
   - –°–æ–∑–¥–∞–π—Ç–µ –∫–ª—é—á (–°–æ–∑–¥–∞—Ç—å –∫–ª—é—á ‚Üí –°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á)
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ JSON —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞

2. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YANDEX_SERVICE_ACCOUNT_KEY —Å JSON —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
   - –£–±–µ—Ä–∏—Ç–µ YANDEX_IAM_TOKEN (–µ—Å–ª–∏ –µ—Å—Ç—å)

3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∞—Ö —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:
   - logging.writer - –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
   - logging.viewer - –¥–ª—è —á—Ç–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ):
1. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π IAM —Ç–æ–∫–µ–Ω:
   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ: yc iam create-token
   - –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API: https://iam.api.cloud.yandex.net/iam/v1/tokens
   - –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é YANDEX_IAM_TOKEN

–ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:
- –°–æ–∑–¥–∞–Ω–∏–µ Service Account Key: https://yandex.cloud/ru/docs/iam/operations/sa/create-access-key
- –ü–æ–ª—É—á–µ–Ω–∏–µ IAM —Ç–æ–∫–µ–Ω–∞: https://yandex.cloud/ru/docs/iam/operations/iam-token/create
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º: https://yandex.cloud/ru/docs/logging/security/

üí° –°–û–í–ï–¢: Service Account Key - —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è production-—Å—Ä–µ–¥—ã!
`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
export async function diagnosAndFixYandexCloudAuth(): Promise<void> {
  console.log('üîç Yandex Cloud Authentication Diagnostic Tool\n');

  await YandexCloudAuthFixer.diagnoseAuthenticationIssue();

  console.log('\n' + '='.repeat(80));

  const fixAttempted = await YandexCloudAuthFixer.quickFix();

  if (!fixAttempted) {
    console.log('\n' + '='.repeat(80));
    YandexCloudAuthFixer.showFixInstructions();
  }

  console.log('\n' + '='.repeat(80));
  console.log('üìù –ü—Ä–∏–º–µ—Ä .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
  console.log(YandexCloudAuthFixer.generateEnvExample());
}
