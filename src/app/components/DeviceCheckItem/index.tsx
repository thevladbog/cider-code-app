import { Button, Text } from '@gravity-ui/uikit';
import classNames from 'classnames';
import React from 'react';

import styles from './DeviceCheckItem.module.scss';

interface DeviceCheckItemProps {
  id: string;
  name: string;
  type: 'scanner' | 'printer';
  status: 'disconnected' | 'connected' | 'verified';
  connection: string | null;
  onCheck: () => void;
  onConfigure: () => void;
  skipTest?: boolean;
}

export const DeviceCheckItem: React.FC<DeviceCheckItemProps> = ({
  name,
  type,
  status,
  connection,
  onCheck,
  onConfigure,
  skipTest = false,
}) => {
  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  const getDeviceIcon = () => {
    if (type === 'scanner') {
      return 'üì∑'; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∏–∫–æ–Ω–∫—É –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    }
    return 'üñ®Ô∏è'; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∏–∫–æ–Ω–∫—É –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  };
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
  const getStatusText = () => {
    if (skipTest && type === 'printer') {
      return '–ü—Ä–æ–ø—É—â–µ–Ω–æ';
    }
    switch (status) {
      case 'verified':
        return '–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ';
      case 'connected':
        return `–ü–æ–¥–∫–ª—é—á–µ–Ω–æ: ${connection}`;
      default:
        return '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ';
    }
  };

  console.log({ name, type, status, connection, onCheck, onConfigure });

  return (
    <div
      className={classNames(styles.deviceItem, {
        [styles.deviceItemDisconnected]: status === 'disconnected' && !skipTest,
        [styles.deviceItemConnected]: status === 'connected',
        [styles.deviceItemVerified]: status === 'verified' || skipTest,
      })}
    >
      {' '}
      <div
        className={classNames(styles.deviceIcon, {
          [styles.deviceIconConnected]: status === 'connected',
          [styles.deviceIconVerified]: status === 'verified' || skipTest,
        })}
      >
        {getDeviceIcon()}
      </div>
      <div className={styles.deviceInfo}>
        <div className={styles.deviceName}>
          <Text variant="body-1">{name}</Text>
        </div>{' '}
        <div
          className={classNames(styles.deviceStatus, {
            [styles.deviceStatusConnected]: status === 'connected',
            [styles.deviceStatusVerified]: status === 'verified' || skipTest,
          })}
        >
          <Text variant="body-2">{getStatusText()}</Text>
        </div>
      </div>{' '}
      <div className={styles.deviceControls}>
        <Button view="normal" onClick={onConfigure} disabled={status === 'verified' || skipTest}>
          –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
        </Button>

        {!skipTest && (
          <Button
            view="action"
            onClick={onCheck}
            disabled={status === 'disconnected' || status === 'verified'}
          >
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
          </Button>
        )}
      </div>
    </div>
  );
};
